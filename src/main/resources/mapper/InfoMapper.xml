<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.InfoMapper">
  <resultMap id="BaseResultMap" type="com.demo.vo.Info">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="identity_card" jdbcType="VARCHAR" property="identityCard" />
    <result column="equity_prove" jdbcType="VARCHAR" property="equityProve" />
    <result column="equity_adress" jdbcType="VARCHAR" property="equityAdress" />
    <result column="application" jdbcType="VARCHAR" property="application" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="statu" jdbcType="INTEGER" property="statu" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, identity_card, equity_prove, equity_adress, application, area, status, 
    statu
  </sql>
  <select id="selectByExample" parameterType="com.demo.vo.InfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.vo.InfoExample">
    delete from info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.vo.Info">
    insert into info (id, name, identity_card, 
      equity_prove, equity_adress, application, 
      area, status, statu
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{identityCard,jdbcType=VARCHAR}, 
      #{equityProve,jdbcType=VARCHAR}, #{equityAdress,jdbcType=VARCHAR}, #{application,jdbcType=VARCHAR}, 
      #{area,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{statu,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.vo.Info" useGeneratedKeys="true" >
    insert into info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="identityCard != null">
        identity_card,
      </if>
      <if test="equityProve != null">
        equity_prove,
      </if>
      <if test="equityAdress != null">
        equity_adress,
      </if>
      <if test="application != null">
        application,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="statu != null">
        statu,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null">
        #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="equityProve != null">
        #{equityProve,jdbcType=VARCHAR},
      </if>
      <if test="equityAdress != null">
        #{equityAdress,jdbcType=VARCHAR},
      </if>
      <if test="application != null">
        #{application,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="statu != null">
        #{statu,jdbcType=INTEGER},
      </if>
    </trim>

    <selectKey keyProperty="id" resultType="java.lang.Long">
      select LAST_INSERT_ID() as id
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.demo.vo.InfoExample" resultType="java.lang.Long">
    select count(*) from info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.identityCard != null">
        identity_card = #{record.identityCard,jdbcType=VARCHAR},
      </if>
      <if test="record.equityProve != null">
        equity_prove = #{record.equityProve,jdbcType=VARCHAR},
      </if>
      <if test="record.equityAdress != null">
        equity_adress = #{record.equityAdress,jdbcType=VARCHAR},
      </if>
      <if test="record.application != null">
        application = #{record.application,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.statu != null">
        statu = #{record.statu,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update info
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      identity_card = #{record.identityCard,jdbcType=VARCHAR},
      equity_prove = #{record.equityProve,jdbcType=VARCHAR},
      equity_adress = #{record.equityAdress,jdbcType=VARCHAR},
      application = #{record.application,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      statu = #{record.statu,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.vo.Info">
    update info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null">
        identity_card = #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="equityProve != null">
        equity_prove = #{equityProve,jdbcType=VARCHAR},
      </if>
      <if test="equityAdress != null">
        equity_adress = #{equityAdress,jdbcType=VARCHAR},
      </if>
      <if test="application != null">
        application = #{application,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="statu != null">
        statu = #{statu,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.vo.Info">
    update info
    set name = #{name,jdbcType=VARCHAR},
      identity_card = #{identityCard,jdbcType=VARCHAR},
      equity_prove = #{equityProve,jdbcType=VARCHAR},
      equity_adress = #{equityAdress,jdbcType=VARCHAR},
      application = #{application,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      statu = #{statu,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>



  <select id="query"  parameterType = "com.demo.vo.Info"  resultMap="BaseResultMap">
    SELECT id, `name`, identity_card, equity_prove, equity_adress, application, area, status from info
    where 1=1  and statu = 1
    <if test="name != null and  name  != ''">
      and
      name like CONCAT('%',#{name},'%')
    </if>

    <if test="equityProve != null and  equityProve  != ''">
      and
      equity_prove like CONCAT('%',#{equityProve},'%')
    </if>
    <if test="equityAdress != null and  equityAdress  != ''">
      and
      equity_adress like CONCAT('%',#{equityAdress},'%')
    </if>

    <if test="area != null and  area  != ''">
      and
      area like CONCAT('%',#{area},'%')
    </if>

    <if test="application != null and  application  != ''">
      and
      application like CONCAT('%',#{application},'%')
    </if>
    <if test="status != null and  status  != ''">
      and
      status like CONCAT('%',#{status},'%')
    </if>
    ;
  </select>



  <select id="queryByIDCard"  parameterType = "java.lang.Long"  resultMap="BaseResultMap">
   SELECT id, `name`, identity_card, equity_prove, equity_adress, application, area, status from info
    where
    id = #{id}
    and statu = 1

  </select>



  <select id="queryAll"  resultMap="BaseResultMap">
   SELECT id, `name`, identity_card, equity_prove, equity_adress, application, area, status from info
    where  statu = 1

  </select>


  <update id="updateStatu" parameterType="java.lang.Long">
UPDATE info SET statu = 0
  where id = #{id,jdbcType=BIGINT};
  </update>



</mapper>